
services:
  transmission-endpoint:
    container_name: distributed_systems_example-transmission-endpoint
    build:
      context: .
      dockerfile: Dockerfile.transmissionEndpoint
    ports:
      - 3001:3000
  microservice:
    container_name: distributed_systems_example-microservice
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432
      AWS_URL: http://localstack:4566
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: accesskeyid
      AWS_SECRET_ACCESS_KEY: accesskey
      ORDER_TRANSMISSION_TOPIC: arn:aws:sns:us-east-1:000000000000:orderTransmission
  db: 
    container_name: distributed_systems_example-db
    image: postgres:16-alpine
    ports:
      - 5435:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d/
  localstack:
    container_name: distributed_systems_example-localstack
    build:
      context: .
      dockerfile: Dockerfile.localstack
    ports:
      - 4566:4566
    environment:
      SERVICES: sqs,sns,iam,s3,lambda,events
      AWS_DEFAULT_REGION: us-east-1
      AWS_URL: http://localstack:4566
      API_URL: http://microservice:3000
      AWS_ACCESS_KEY_ID: accesskeyid
      AWS_SECRET_ACCESS_KEY: accesskey
      DOCKER_HOST: unix:///var/run/docker.sock
      LAMBDA_KEEPALIVE_MS: 120000
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASS: postgres
      POSTGRES_PORT: 5432
      ORDER_TIMEOUT_TOPIC: arn:aws:sns:us-east-1:000000000000:orderTimeout
      # DEBUG: 1
#      DATA_DIR: /tmp/localstack/data
    volumes:
#      - /tmp/localstack:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./create-aws-resources.sh:/etc/localstack/init/ready.d/create-aws-resources.sh
volumes:
  postgres_data: